package com.example.demo.controller;

import java.security.Key;
import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.dao.LoginDao;
import com.example.demo.service.LoginService;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;


@CrossOrigin(origins = {"http://localhost:8080", "https://localhost:8080" }) 
@EnableAutoConfiguration
@RestController
public class Login_RestApiController {
	
	@Autowired
	LoginService LoginRepository;

	@GetMapping(value="/usr/registMbr")
	public Map<String,Object>registMbr(@RequestParam(value="user_id") String user_id) {
		
		Map<String,Object> result = new HashMap<String, Object>();
		
		Map<String,Object> header = new HashMap<String, Object>();
		header.put("typ", "JWT");
		header.put("alg", "HS256");
		System.out.println("user_id:"+user_id);
		Map<String,Object> claims = new HashMap<String, Object>();
		header.put("user_id", "test");
		
		String secretKey = "A";
		//String jwt_token = Jwts.builder().setHeader(header).setClaims(claims).signWith(SignatureAlgorithm.HS256, secretKey.getBytes()).compact();
		String jwt_token = Jwts.builder()
				.setHeaderParam("typ", "JWT")
				.setHeaderParam("issueDate", System.currentTimeMillis())
				.setClaims(claims)
				.setSubject(user_id)
				.signWith(SignatureAlgorithm.HS256, secretKey.getBytes())
				.compact();
		
		result.put("token", jwt_token);
		
		return result;
	}
	
	
	@PostMapping(value="/usr/LoginChk")
	public Map<String,Object>LoginChk(
			@RequestParam(value="user_id") String user_id,
			@RequestParam(value="pwd") String pwd){
		
		Map<String,Object> result = new HashMap<String, Object>();
							
		if(user_id != null && pwd != null) {
			Map<String,Object> map = new HashMap<String, Object>();
			map.put("user_id", user_id);
			map.put("pwd", pwd);
			
			Map<String,Object> data = LoginRepository.SelectUsr(map);
			
			if(data != null){
				result.put("mbr_nm",data.get("mbr_nm"));
				result.put("token", data.get("mbr_token"));
				result.put("state", "200");
				result.put("message", "success");
			}else {
				result.put("state", "500");
				result.put("message", "fail");
			}
			
		}
		
		System.out.println(result);
		
		return result;
	}
	
	
}
